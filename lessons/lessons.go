package lessons

import "time"

const (
	msgSunday = "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –∂–µ....üôà"
)

type lesson struct {
	Name    string
	Teacher string
	Time    string
}

func TomorrowLessons() string {
	result := "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n"
	result += stringTomorrowLessons(time.Now().Weekday())
	return result
}

func AllLessons() string {
	result := "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n\n"
	result += stringAllLessons()
	return result
}

func LessonsToday() string {
	result := "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
	result += stringLessonsByDay(time.Now().Weekday())
	return result
}

func Lessons() map[time.Weekday][]lesson {
	lessons := make(map[time.Weekday][]lesson)
	lessons[time.Monday] = []lesson{
		{Name: "–ë–ñ–î", Teacher: "–î—É–±–æ–≤–∞", Time: "9:45"},
		{Name: "–ë–ñ–î", Teacher: "–•–æ—Ä–æ—à–∏–ª–æ–≤–∞", Time: "11:30"},
	}
	lessons[time.Tuesday] = []lesson{
		{Name: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö", Teacher: "–ü—Ä–æ—Ö–æ—Ä–æ–≤ –ö–∏—Ä—é—Ö–∞", Time: "8:00"},
		{Name: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö", Teacher: "–ü—Ä–æ—Ö–æ—Ä–æ–≤ –ö–∏—Ä—é—Ö–∞", Time: "9:45"},
	}
	lessons[time.Wednesday] = []lesson{
		{Name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –µ–µ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è", Teacher: "–í–µ–ª–∏–º–µ–¥–æ–≤–∞", Time: "--:--"},
	}

	lessons[time.Thursday] = []lesson{
		{Name: "–û–í–ü", Teacher: "–ó–∞–π—Ü–µ–≤", Time: "8:00"},
	}
	lessons[time.Friday] = []lesson{
		{Name: "–û—Å–Ω–æ–≤—ã –ø—Ä–∞–≤–∞", Teacher: "–°–∞–ø—Ä–∏–Ω –ò.–ì.", Time: "9:45"},
		{Name: "–û–û–ü", Teacher: "–ö–æ—Ä–æ–≤—á–µ–Ω–∫–æ –ò.–°", Time: "11:30"},
	}
	lessons[time.Saturday] = []lesson{
		{Name: "–ó–∞—â–∏—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", Teacher: "–û–≤—Ü–∏–Ω–Ω–∏–∫–æ–≤–∞ –¢.–ú.", Time: "9:45"},
		{Name: "–û—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", Teacher: "–ì—É—Ç–µ—Ä–º–∞–Ω –ù.–ï.", Time: "13:25"},
	}
	return lessons
}

func stringLessonsByDay(day time.Weekday) string {
	ls := Lessons()
	result := ""
	today := ls[day]
	if today == nil {
		result += msgSunday
	}
	for _, l := range today {
		result += "‚Ä¢ " + "–í—Ä–µ–º—è: " + l.Time + ". " + l.Name + ". " + l.Teacher + "\n"
	}
	return result
}

func stringAllLessons() string {
	result := ""
	for d := time.Monday; d <= time.Saturday; d++ {
		switch d {
		case time.Monday:
			result += "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:\n"
		case time.Tuesday:
			result += "–í—Ç–æ—Ä–Ω–∏–∫:\n"
		case time.Wednesday:
			result += "–°—Ä–µ–¥–∞:\n"
		case time.Thursday:
			result += "–ß–µ—Ç–≤–µ—Ä–≥:\n"
		case time.Friday:
			result += "–ü—è—Ç–Ω–∏—Ü–∞:\n"
		case time.Saturday:
			result += "–°—É–±–±–æ—Ç–∞:\n"
		}
		result += stringLessonsByDay(d)
		result += "\n"
	}
	return result
}

func stringTomorrowLessons(day time.Weekday) string {
	day += 1
	if day == 7 {
		day = 0
	}
	return stringLessonsByDay(day)
}
